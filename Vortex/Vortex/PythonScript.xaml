<Window x:Class="Vortex.PythonScript"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Vortex"
        Title="PythonScript" Height="300" Width="300" Background="Black">
     <Window.Resources>
          <Style TargetType="{x:Type TreeViewItem}">
               <Setter Property="Foreground" Value="White"/>
               <Setter Property="BorderThickness" Value="1"/>
               <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                         <Setter Property="Background" Value="White"/>
                         <Setter Property="Foreground" Value="White"/>
                    </Trigger>

               </Style.Triggers>
               <Style.Resources>
                    <Style TargetType="Border">
                         <Setter Property="CornerRadius" Value="2"/>
                    </Style>
                    <SolidColorBrush Color="White" x:Key="{x:Static SystemColors.HighlightBrushKey}"/>
               </Style.Resources>
          </Style>
          <Style TargetType="{x:Type Button}">
               <Setter Property="Background" Value="Black"/>
               <Setter Property="Foreground" Value="White"/>
               <Setter Property="Template">
                    <Setter.Value>
                         <ControlTemplate TargetType="Button">
                              <Border CornerRadius="0" BorderBrush="White" BorderThickness="3"  >
                                   <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                              </Border>
                         </ControlTemplate>
                    </Setter.Value>
               </Setter>
               <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                         <Setter Property="Template">
                              <Setter.Value>
                                   <ControlTemplate TargetType="Button">
                                        <Border CornerRadius="0" BorderBrush="White" BorderThickness="3" Background="Magenta" >
                                             <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                   </ControlTemplate>
                              </Setter.Value>
                         </Setter>
                    </Trigger>
                    <Trigger Property="Button.IsPressed" Value="True">
                         <Setter Property="Template">
                              <Setter.Value>
                                   <ControlTemplate TargetType="Button">
                                        <Border CornerRadius="0" BorderBrush="White" BorderThickness="3" Background="Purple" >
                                             <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                   </ControlTemplate>
                              </Setter.Value>
                         </Setter>
                    </Trigger>
               </Style.Triggers>
          </Style>
          <Style x:Key="{x:Type RadioButton}"
       TargetType="{x:Type RadioButton}">
               <Setter Property="SnapsToDevicePixels"
          Value="true" />
               <Setter Property="OverridesDefaultStyle"
          Value="true" />
               <Setter Property="FocusVisualStyle"
          Value="{DynamicResource RadioButtonFocusVisual}" />
               <Setter Property="Template">
                    <Setter.Value>
                         <ControlTemplate TargetType="{x:Type RadioButton}">
                              <BulletDecorator Background="Transparent">
                                   <BulletDecorator.Bullet>
                                        <Grid Width="13"
                  Height="13">
                                             <Ellipse x:Name="Border"
                       StrokeThickness="1">
                                                  <Ellipse.Stroke>
                                                       <LinearGradientBrush EndPoint="0.5,1"
                                       StartPoint="0.5,0">
                                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                  Offset="0" />
                                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                  Offset="1" />
                                                       </LinearGradientBrush>
                                                  </Ellipse.Stroke>
                                                  <Ellipse.Fill>
                                                       <LinearGradientBrush StartPoint="0,0"
                                       EndPoint="0,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                 <GradientStopCollection>
                                                                      <GradientStop Color="White" />
                                                                      <GradientStop Color="White"
                                      Offset="1.0" />
                                                                 </GradientStopCollection>
                                                            </LinearGradientBrush.GradientStops>
                                                       </LinearGradientBrush>
                                                  </Ellipse.Fill>
                                             </Ellipse>
                                             <Ellipse x:Name="CheckMark"
                       Margin="4"
                       Visibility="Collapsed">
                                                  <Ellipse.Fill>
                                                       <SolidColorBrush Color="Black"
 />
                                                  </Ellipse.Fill>
                                             </Ellipse>
                                        </Grid>
                                   </BulletDecorator.Bullet>
                                   <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                             <VisualState x:Name="Normal" />
                                             <VisualState x:Name="MouseOver">
                                                  <Storyboard>
                                                       <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="White" />
                                                       </ColorAnimationUsingKeyFrames>
                                                  </Storyboard>
                                             </VisualState>
                                             <VisualState x:Name="Pressed">
                                                  <Storyboard>
                                                       <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="White" />
                                                       </ColorAnimationUsingKeyFrames>
                                                  </Storyboard>
                                             </VisualState>
                                             <VisualState x:Name="Disabled">
                                                  <Storyboard>
                                                       <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="White" />
                                                       </ColorAnimationUsingKeyFrames>
                                                       <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Stroke).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#40000000" />
                                                       </ColorAnimationUsingKeyFrames>
                                                       <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Stroke).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#40000000" />
                                                       </ColorAnimationUsingKeyFrames>
                                                  </Storyboard>
                                             </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                             <VisualState x:Name="Checked">
                                                  <Storyboard>
                                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="CheckMark">
                                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                                       </ObjectAnimationUsingKeyFrames>
                                                  </Storyboard>
                                             </VisualState>
                                             <VisualState x:Name="Unchecked" />
                                             <VisualState x:Name="Indeterminate" />
                                        </VisualStateGroup>
                                   </VisualStateManager.VisualStateGroups>
                                   <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                              </BulletDecorator>
                         </ControlTemplate>
                    </Setter.Value>
               </Setter>
          </Style>
          <Style x:Key="{x:Type CheckBox}"
       TargetType="{x:Type CheckBox}">
               <Setter Property="SnapsToDevicePixels"
          Value="true" />
               <Setter Property="OverridesDefaultStyle"
          Value="true" />
               <Setter Property="FocusVisualStyle"
          Value="{DynamicResource CheckBoxFocusVisual}" />
               <Setter Property="Template">
                    <Setter.Value>
                         <ControlTemplate TargetType="{x:Type CheckBox}">
                              <BulletDecorator Background="Transparent">
                                   <BulletDecorator.Bullet>
                                        <Border x:Name="Border"
                    Width="13"
                    Height="13"
                    CornerRadius="0"
                    BorderThickness="1">
                                             <Border.BorderBrush>
                                                  <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                                       <LinearGradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                 <GradientStop Color="{DynamicResource BorderLightColor}"
                                    Offset="0.0" />
                                                                 <GradientStop Color="{DynamicResource BorderDarkColor}"
                                    Offset="1.0" />
                                                            </GradientStopCollection>
                                                       </LinearGradientBrush.GradientStops>
                                                  </LinearGradientBrush>
                                             </Border.BorderBrush>
                                             <Border.Background>
                                                  <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                                       <LinearGradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                 <GradientStop Color="white" />
                                                                 <GradientStop Color="white"
                                    Offset="1.0" />
                                                            </GradientStopCollection>
                                                       </LinearGradientBrush.GradientStops>
                                                  </LinearGradientBrush>

                                             </Border.Background>
                                             <Grid>
                                                  <Path Visibility="Collapsed"
                      Width="7"
                      Height="7"
                      x:Name="CheckMark"
                      SnapsToDevicePixels="False"
                      StrokeThickness="2"
                      Data="M 0 0 L 2 7 L 7 0">
                                                       <Path.Stroke>
                                                            <SolidColorBrush Color="Black" />
                                                       </Path.Stroke>
                                                  </Path>
                                                  <Path Visibility="Collapsed"
                      Width="7"
                      Height="7"
                      x:Name="InderminateMark"
                      SnapsToDevicePixels="False"
                      StrokeThickness="2"
                      Data="M 0 7 L 7 0">
                                                       <Path.Stroke>
                                                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                                       </Path.Stroke>
                                                  </Path>
                                             </Grid>
                                        </Border>
                                   </BulletDecorator.Bullet>
                                   <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                             <VisualState x:Name="Normal" />
                                             <VisualState x:Name="MouseOver">
                                                  <Storyboard>
                                                       <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="White" />
                                                       </ColorAnimationUsingKeyFrames>
                                                  </Storyboard>
                                             </VisualState>
                                             <VisualState x:Name="Pressed">
                                                  <Storyboard>
                                                       <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="White" />
                                                       </ColorAnimationUsingKeyFrames>
                                                       <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="White" />
                                                       </ColorAnimationUsingKeyFrames>
                                                       <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="White" />
                                                       </ColorAnimationUsingKeyFrames>
                                                  </Storyboard>
                                             </VisualState>
                                             <VisualState x:Name="Disabled" />
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                             <VisualState x:Name="Checked">
                                                  <Storyboard>
                                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="CheckMark">
                                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                                       </ObjectAnimationUsingKeyFrames>
                                                  </Storyboard>
                                             </VisualState>
                                             <VisualState x:Name="Unchecked" />
                                             <VisualState x:Name="Indeterminate">
                                                  <Storyboard>
                                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="InderminateMark">
                                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                                       </ObjectAnimationUsingKeyFrames>
                                                  </Storyboard>
                                             </VisualState>
                                        </VisualStateGroup>
                                   </VisualStateManager.VisualStateGroups>
                                   <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                              </BulletDecorator>
                         </ControlTemplate>
                    </Setter.Value>
               </Setter>
          </Style>

          <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
               <GradientBrush.GradientStops>
                    <GradientStopCollection>
                         <GradientStop Color="Black" Offset="0.0"/>
                         <GradientStop Color="Black" Offset="1.0"/>
                    </GradientStopCollection>
               </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
               <GradientBrush.GradientStops>
                    <GradientStopCollection>
                         <GradientStop Color="Black" Offset="0.0"/>
                         <GradientStop Color="Black" Offset="1.0"/>
                    </GradientStopCollection>
               </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
               <GradientBrush.GradientStops>
                    <GradientStopCollection>
                         <GradientStop Color="Black" Offset="0.0"/>
                         <GradientStop Color="Black" Offset="1.0"/>
                    </GradientStopCollection>
               </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
               <GradientBrush.GradientStops>
                    <GradientStopCollection>
                         <GradientStop Color="Black" Offset="0.0"/>
                         <GradientStop Color="Black" Offset="1.0"/>
                    </GradientStopCollection>
               </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
               <GradientBrush.GradientStops>
                    <GradientStopCollection>
                         <GradientStop Color="Black" Offset="0.0"/>
                         <GradientStop Color="Black" Offset="1.0"/>
                    </GradientStopCollection>
               </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
               <GradientBrush.GradientStops>
                    <GradientStopCollection>
                         <GradientStop Color="Black" Offset="0.0"/>
                         <GradientStop Color="Black" Offset="0.1"/>
                         <GradientStop Color="Black" Offset="0.9"/>
                         <GradientStop Color="Black" Offset="1.0"/>
                    </GradientStopCollection>
               </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <SolidColorBrush x:Key="DisabledForegroundBrush" Color="White" />

          <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="Black" />

          <SolidColorBrush x:Key="WindowBackgroundBrush" Color="Black" />

          <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Magenta" />

          <!-- Border Brushes -->

          <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
               <GradientBrush.GradientStops>
                    <GradientStopCollection>
                         <GradientStop Color="White" Offset="0.0"/>
                         <GradientStop Color="White" Offset="1.0"/>
                    </GradientStopCollection>
               </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
               <GradientBrush.GradientStops>
                    <GradientStopCollection>
                         <GradientStop Color="White" Offset="0.0"/>
                         <GradientStop Color="White" Offset="1.0"/>
                    </GradientStopCollection>
               </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
               <GradientBrush.GradientStops>
                    <GradientStopCollection>
                         <GradientStop Color="White" Offset="0.0"/>
                         <GradientStop Color="White" Offset="1.0"/>
                    </GradientStopCollection>
               </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
               <GradientBrush.GradientStops>
                    <GradientStopCollection>
                         <GradientStop Color="White" Offset="0.0"/>
                         <GradientStop Color="White" Offset="1.0"/>
                    </GradientStopCollection>
               </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <SolidColorBrush x:Key="DisabledBorderBrush" Color="White" />

          <SolidColorBrush x:Key="SolidBorderBrush" Color="White" />

          <SolidColorBrush x:Key="LightBorderBrush" Color="White" />

          <!-- Miscellaneous Brushes -->
          <SolidColorBrush x:Key="GlyphBrush" Color="White" />

          <SolidColorBrush x:Key="LightColorBrush" Color="Black" />
          <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">

               <Grid>
                    <Grid.ColumnDefinitions>
                         <ColumnDefinition />
                         <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border
      x:Name="Border" 
      Grid.ColumnSpan="2"
      CornerRadius="0"
      Background="{StaticResource NormalBrush}"
      BorderBrush="{StaticResource NormalBorderBrush}"
      BorderThickness="0,3,3,3" />
                    <Border 
      Grid.Column="0"
      CornerRadius="0,0,0,0" 
      Margin="0" 
      Background="{StaticResource WindowBackgroundBrush}" 
      BorderBrush="{DynamicResource NormalBorderBrush}"
      BorderThickness="3,3,0,3" />
                    <Path 
      x:Name="Arrow"
      Grid.Column="1"     
      Fill="{StaticResource GlyphBrush}"
      HorizontalAlignment="Center"
      VerticalAlignment="Center"
      Data="M 0 0 L 4 4 L 8 0 Z"/>
               </Grid>
               <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                         <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="true">
                         <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                         <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                         <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                         <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                         <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
                    </Trigger>
               </ControlTemplate.Triggers>
          </ControlTemplate>

          <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
               <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
          </ControlTemplate>

          <Style x:Key="{x:Type local:OptionsBox}" TargetType="local:OptionsBox">
               <Setter Property="SnapsToDevicePixels" Value="true"/>
               <Setter Property="OverridesDefaultStyle" Value="true"/>
               <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
               <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
               <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
               <Setter Property="MinWidth" Value="120"/>
               <Setter Property="MinHeight" Value="20"/>
               <Setter Property="Template">
                    <Setter.Value>
                         <ControlTemplate TargetType="local:OptionsBox">
                              <Grid>
                                   <ToggleButton 
            Name="ToggleButton" 
            Template="{StaticResource ComboBoxToggleButton}" 
            Grid.Column="2" 
            Focusable="false"
            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
            ClickMode="Press">
                                   </ToggleButton>
                                   <ContentPresenter
            Name="ContentSite"
            IsHitTestVisible="False" 
            Content="{TemplateBinding SelectionBoxItem}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            Margin="3,3,23,3"
            VerticalAlignment="Center"
            HorizontalAlignment="Left" />
                                   <TextBox x:Name="PART_EditableTextBox"
            Style="{x:Null}" 
            Template="{StaticResource ComboBoxTextBox}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="3,3,23,3"
            Focusable="True" 
            Background="Transparent"
            Visibility="Hidden"
            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                   <Popup 
            Name="Popup"
            Placement="Bottom"
            IsOpen="{TemplateBinding IsDropDownOpen}"
            AllowsTransparency="True" 
            Focusable="False"
            PopupAnimation="Slide">
                                        <Grid 
              Name="DropDown"
              SnapsToDevicePixels="True"                
              MinWidth="{TemplateBinding ActualWidth}"
              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                             <Border 
                x:Name="DropDownBorder"
                Background="{StaticResource WindowBackgroundBrush}"
                BorderThickness="1"
                BorderBrush="{StaticResource SolidBorderBrush}"/>
                                             <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                             </ScrollViewer>
                                        </Grid>
                                   </Popup>
                              </Grid>
                              <ControlTemplate.Triggers>
                                   <Trigger Property="HasItems" Value="false">
                                        <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                   </Trigger>
                                   <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                   </Trigger>
                                   <Trigger Property="IsGrouping" Value="true">
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                   </Trigger>
                                   <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                        <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                        <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                                   </Trigger>
                                   <Trigger Property="IsEditable"
               Value="true">
                                        <Setter Property="IsTabStop" Value="false"/>
                                        <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                                        <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                   </Trigger>
                              </ControlTemplate.Triggers>
                         </ControlTemplate>
                    </Setter.Value>
               </Setter>
               <Style.Triggers>
               </Style.Triggers>

          </Style>

          <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
               <Setter Property="SnapsToDevicePixels" Value="true"/>
               <Setter Property="OverridesDefaultStyle" Value="true"/>
               <Setter Property="Template">
                    <Setter.Value>
                         <ControlTemplate TargetType="ComboBoxItem">
                              <Border 
          Name="Border"
          Padding="2"
          SnapsToDevicePixels="true">
                                   <ContentPresenter />
                              </Border>
                              <ControlTemplate.Triggers>
                                   <Trigger Property="IsHighlighted" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                   </Trigger>
                                   <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                   </Trigger>
                              </ControlTemplate.Triggers>
                         </ControlTemplate>
                    </Setter.Value>
               </Setter>
          </Style>
     </Window.Resources>

     <Canvas Name="Canvas"/>
</Window>
