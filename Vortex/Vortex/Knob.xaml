<UserControl x:Class="Vortex.Knob"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="50" MouseDown="Knob_MouseDown" MouseUp="Knob_MouseUp" >
     <UserControl.Resources>
          <Style TargetType="ContextMenu">
               <Setter Property="Background"  Value="Black"/>
               <Setter Property="Foreground" Value="White"/>
               <Setter Property="Template">
                    <Setter.Value>
                         <ControlTemplate TargetType="ContextMenu">
                              <Border CornerRadius="0" BorderBrush="Black" BorderThickness="3" Background="Black" SnapsToDevicePixels="True">
                                   <ItemsPresenter />
                              </Border>
                         </ControlTemplate>
                    </Setter.Value>
               </Setter>

          </Style>
          <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
               <Setter Property="Height"
          Value="1" />
               <Setter Property="Margin"
          Value="4,4,4,4" />
               <Setter Property="Template">
                    <Setter.Value>
                         <ControlTemplate TargetType="{x:Type Separator}">
                              <Border BorderThickness="2">
                                   <Border.BorderBrush>
                                        <SolidColorBrush Color="Blue" />
                                   </Border.BorderBrush>
                              </Border>
                         </ControlTemplate>
                    </Setter.Value>
               </Setter>
          </Style>

          <!-- TopLevelHeader -->
          <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
               <Border x:Name="Border">
                    <Grid>
                         <ContentPresenter Margin="6,6,6,6
                                           "
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                         <Popup x:Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                              <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="2"
                Background="Magenta">
                                  
                                   


                              </Border>
                         </Popup>
                    </Grid>
               </Border>
               <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation"
             Value="true">
                         <Setter TargetName="Popup"
              Property="PopupAnimation"
              Value="None" />
                    </Trigger>
                    <Trigger Property="IsHighlighted"
             Value="true">
                         <Setter TargetName="Border"
              Property="BorderBrush"
              Value="Blue" />
                         <Setter Property="Background"
              TargetName="Border" Value="Blue">
                            
                         </Setter>
                    </Trigger>
                    <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                         <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="0" />
                         <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,0,0,3" />
                    </Trigger>
                    <Trigger Property="IsEnabled"
             Value="False">
                         <Setter Property="Foreground">
                              <Setter.Value>
                                   <SolidColorBrush Color="White" />
                              </Setter.Value>
                         </Setter>
                    </Trigger>
               </ControlTemplate.Triggers>
          </ControlTemplate>

          <!-- TopLevelItem -->
          <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
               <Border x:Name="Border">
                    <Grid>
                         <ContentPresenter Margin="6,6,6,6"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                    </Grid>
               </Border>
               <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted"
             Value="true">
                         <Setter Property="Background"
              TargetName="Border">
                              <Setter.Value>
                                   <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                             <GradientStopCollection>
                                                  <GradientStop Color="Blue" />
                                                  <GradientStop Color="Blue"
                              Offset="1.0" />
                                             </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                   </LinearGradientBrush>

                              </Setter.Value>
                         </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled"
             Value="False">
                         <Setter Property="Foreground">
                              <Setter.Value>
                                   <SolidColorBrush Color="White" />
                              </Setter.Value>
                         </Setter>
                    </Trigger>
               </ControlTemplate.Triggers>
          </ControlTemplate>

          <!-- SubmenuItem -->
          <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
               <Border x:Name="Border"
          BorderThickness="2" BorderBrush="Blue">
                    <Grid>
                         <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                              <ColumnDefinition Width="*" />
                              <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                              <ColumnDefinition Width="13" />
                         </Grid.ColumnDefinitions>
                         <ContentPresenter x:Name="Icon"
                        Margin="0,0,0,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                         <Border x:Name="Check"
              Width="13"
              Height="13"
              Visibility="Collapsed"
              Margin="0,0,0,0"
              BorderThickness="2">
                              <Border.BorderBrush>

                                   
                                   <SolidColorBrush Color="Blue"/>
                              </Border.BorderBrush>
                              <Border.Background>
                                   <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                             <GradientStopCollection>
                                                  <GradientStop Color="Blue"/>
                                                  <GradientStop Color="Blue"
                              Offset="1.0" />
                                             </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                   </LinearGradientBrush>
                              </Border.Background>
                              <Path x:Name="CheckMark"
              Width="7"
              Height="7"
              Visibility="Hidden"
              SnapsToDevicePixels="False"
              StrokeThickness="2"
              Data="M 0 0 L 7 7 M 0 7 L 7 0">
                                   <Path.Stroke>
                                        <SolidColorBrush Color="Blue" />
                                   </Path.Stroke>
                              </Path>
                         </Border>
                         <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                         <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="2,2,2,2"
                 DockPanel.Dock="Right" />
                    </Grid>
               </Border>
               <ControlTemplate.Triggers>
                    <Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />
                    <Trigger Property="Icon"
             Value="{x:Null}">
                         <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsChecked"
             Value="true">
                         <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
                    </Trigger>
                    <Trigger Property="IsCheckable"
             Value="true">
                         <Setter TargetName="Check"
              Property="Visibility"
              Value="Visible" />
                         <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
                    </Trigger>
                    <Trigger Property="IsHighlighted"
             Value="true">
                         <Setter Property="Background"
              TargetName="Border" Value="Magenta">
                              
                         </Setter>
                         <Setter Property="BorderBrush"
              TargetName="Border" Value="Blue">
                    
                         </Setter>
                         <Setter Property="BorderThickness" Value="2"/>
                    </Trigger>
                    <Trigger Property="IsEnabled"
             Value="false">
                         <Setter Property="Foreground">
                              <Setter.Value>
                                   <SolidColorBrush Color="White" />
                              </Setter.Value>
                         </Setter>
                    </Trigger>
               </ControlTemplate.Triggers>
          </ControlTemplate>

          <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
               <Border x:Name="Border"
          BorderThickness="1">
                    <Grid>
                         <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
                              <ColumnDefinition Width="*" />
                              <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                              <ColumnDefinition Width="13" />
                         </Grid.ColumnDefinitions>
                         <ContentPresenter x:Name="Icon"
                        Margin="6,6,6,6"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                         <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                         <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="2,2,2,2"
                 DockPanel.Dock="Right" />
                         <Path Grid.Column="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 0 7 L 4 3.5 Z">
                              <Path.Fill>
                                   <SolidColorBrush Color="Blue" />
                              </Path.Fill>
                         </Path>
                         <Popup x:Name="Popup"
             Placement="Right"
             HorizontalOffset="-4"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                              <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                Background="Blue"
                BorderThickness="1">
                                   <Border.BorderBrush>
                                        <SolidColorBrush Color="Blue" />
                                   </Border.BorderBrush>
                              </Border>
                         </Popup>
                    </Grid>
               </Border>
               <ControlTemplate.Triggers>
                    <Trigger Property="Icon"
             Value="{x:Null}">
                         <Setter TargetName="Icon"
              Property="Visibility"
              Value="Collapsed" />
                    </Trigger>
                    <Trigger Property="IsHighlighted"
             Value="true">
                         <Setter Property="Background"
              TargetName="Border" Value="Blue">

                         </Setter>
                         <Setter Property="BorderBrush"
              TargetName="Border" Value="Blue">
                         </Setter>
                    </Trigger>
                    <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                         <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="0" />
                         <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,3,0,3" />
                    </Trigger>
                    <Trigger Property="IsEnabled"
             Value="false">
                         <Setter Property="Foreground">
                              <Setter.Value>
                                   <SolidColorBrush Color="White" />
                              </Setter.Value>
                         </Setter>
                    </Trigger>
               </ControlTemplate.Triggers>
          </ControlTemplate>

          <!-- MenuItem Style -->
          <Style x:Key="{x:Type MenuItem}"
       TargetType="{x:Type MenuItem}">
               <Setter Property="OverridesDefaultStyle"
          Value="True" />
               <Style.Triggers>
                    <Trigger Property="Role"
             Value="TopLevelHeader">
                         <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                         <Setter Property="Grid.IsSharedSizeScope"
              Value="true" />
                    </Trigger>
                    <Trigger Property="Role"
             Value="TopLevelItem">
                         <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                    </Trigger>
                    <Trigger Property="Role"
             Value="SubmenuHeader">
                         <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                    </Trigger>
                    <Trigger Property="Role"
             Value="SubmenuItem">
                         <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                    </Trigger>
               </Style.Triggers>
          </Style>

     </UserControl.Resources>
     <Canvas   HorizontalAlignment="Left" Height="50" VerticalAlignment="Top" Width="50" Name="canvas">
          <Ellipse Fill="Gray" Height="50"  Width="50" Name="bg" Stroke="Blue"/>
          <Ellipse  Name="indicator" Fill="Blue" Height="25" Width=" 25" RenderTransformOrigin="0.5,0.5" Canvas.Top="12" Canvas.Left="12" />
          <Ellipse  x:Name="label" Fill="Blue" Height="25" Width=" 25" RenderTransformOrigin="0.5,0.5" Canvas.Top="12" Canvas.Left="12" />
          <Label Canvas.Top="13" Width="33" Name="txt" FontSize="8" Content="Empty" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Canvas.Left="8" Height="25" />
          <Canvas.ContextMenu>
               <ContextMenu Name="Options">
                    <MenuItem Header="Set output" Click="Change_Source" />
                    <MenuItem Header="Set input" Click="Set_slider" />
               </ContextMenu>
          </Canvas.ContextMenu>
     </Canvas>

</UserControl>
     
